{"version":3,"sources":["components/List.js","components/New.js","components/Detail.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["List","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","setState","pets","data","catch","err","console","log","state","react_default","a","createElement","Fragment","react_router_dom","to","map","pet","key","_id","name","type","description","Component","New","change","e","p","objectSpread","newPet","target","value","makepet","preventDefault","post","errors","history","push","skill_one","skill_two","skill_three","like","liked","onSubmit","className","onChange","bind","message","rows","id","Detail","match","params","concat","addLike","put","delete","assertThisInitialized","disabled","onClick","Edit","updatePet","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15749077.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nclass List extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pets: []\r\n        }\r\n    }\r\n    componentDidMount =() => {\r\n        axios.get(\"/api/pets\")\r\n        .then( res => {\r\n            this.setState({pets: res.data.pets});\r\n        })\r\n        .catch( err =>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h2>These pets are looking for a home!</h2>\r\n            <Link to=\"/new\">Add a pet to the shelter</Link>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name:</th> \r\n                        <th>Type:</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.pets.map( pet =>\r\n                        <tr key={pet._id}>\r\n                            <td>{pet.name}</td>\r\n                            <td>{pet.type}</td> \r\n                            <td>{pet.description}</td>\r\n                            <td>\r\n                                <span><Link to={\"/pets/\" + pet._id}>Detail</Link>\r\n                                &nbsp;\r\n                                <Link to={\"/edit/\" + pet._id}>Edit</Link></span>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default List;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass New extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            newPet: {\r\n                name: \"\",\r\n                type: \"\",\r\n                description: \"\",\r\n                skill_one: \"\",\r\n                skill_two: \"\",\r\n                skill_three: \"\",\r\n                like: 0,\r\n                liked: false\r\n                },\r\n            errors: {}\r\n        }\r\n    }\r\n    change = (key, e) => {\r\n        let p = {...this.state.newPet};\r\n        p[key] = e.target.value;\r\n        this.setState({newPet: p});\r\n    }\r\n\r\n    makepet = (e) =>{\r\n        e.preventDefault();\r\n        axios.post(\"/api/pets\", this.state.newPet)\r\n        .then( res =>{\r\n            if(res.data.errors){\r\n                this.setState({errors: res.data.errors.errors})\r\n  \r\n            } else{\r\n                this.props.history.push(\"/\");\r\n            }\r\n        });\r\n    } \r\n    render(){\r\n        return(\r\n            <>\r\n            <h2>Know of a pet needing a home?</h2>\r\n                <form onSubmit={this.makepet}>\r\n                    <div className=\"form-group\">\r\n                        <label>Pet Name:  </label>\r\n                        <input type=\"text\" onChange={this.change.bind(this, \"name\")} />\r\n                        {\r\n                            (this.state.errors.name) ?\r\n                            <span className=\"error\">{this.state.errors.name.message}</span> :\r\n                            <span></span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Pet Type:  </label>\r\n                        <input type=\"text\" onChange={this.change.bind(this, \"type\")} />\r\n                    {\r\n                        (this.state.errors.type) ?\r\n                        <span className=\"error\">{this.state.errors.type.message}</span> :\r\n                        <span></span>\r\n                    }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description:  </label>\r\n                        <textarea className=\"form-control\" rows=\"2\" id=\"comment\" onChange={this.change.bind(this, \"description\")} />\r\n                    {\r\n                        (this.state.errors.description) ?\r\n                        <span className=\"error\">{this.state.errors.description.message}</span> :\r\n                        <span></span>\r\n                    }\r\n                        <fieldset>\r\n                            <legend>Skills:</legend>\r\n                            <div className=\"form-group\">\r\n                                <label>Skill 1:  </label>\r\n                                <input type=\"text\" onChange={this.change.bind(this, \"skill_one\")} />\r\n                                <label>Skill 2:  </label>\r\n                                <input type=\"text\" onChange={this.change.bind(this, \"skill_two\")} />\r\n                                <label>Skill 3:  </label>\r\n                                <input type=\"text\" onChange={this.change.bind(this, \"skill_three\")} />\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                    <br></br>\r\n                    <input type=\"submit\" value=\"Add Pet\" />\r\n                    <Link to=\"/\">Cancel</Link>\r\n                \r\n                </form>  \r\n            </> \r\n        )\r\n    }\r\n    }\r\nexport default New;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Detail extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pet: {\r\n                name: \"\",\r\n                type: \"\",\r\n                description: \"\",\r\n                skill_one: \"\",\r\n                skill_two: \"\",\r\n                skill_three: \"\",\r\n                like: 0,\r\n                liked: false\r\n            },\r\n            errors: {}\r\n        };\r\n        this.addLike = this.addLike.bind(this);\r\n    }\r\n    componentDidMount =() => {\r\n        console.log(this.props.match.params._id);\r\n        axios.get(`/api/pets/${this.props.match.params._id}`)\r\n        .then( res => {\r\n            this.setState({pet: res.data.pet});\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    addLike = (e) =>{\r\n        let like = this.state.pet.like + 1;\r\n        this.state.pet.like ++;\r\n        this.state.pet.liked = true;\r\n        this.setState({pet: {...this.state.pet, like: like, liked:true}});\r\n        axios.put(`/api/pets/${this.props.match.params._id}`, this.state.pet)\r\n            .then( res =>{\r\n                this.componentDidMount();\r\n            })\r\n                .catch( err => {\r\n                    console.log(err);\r\n            });\r\n    }\r\n    delete = (e) =>{\r\n        axios.delete(`/api/pets/${this.props.match.params._id}`)\r\n            .then(res =>{\r\n                this.props.history.push(\"/\");\r\n            })\r\n            .catch( err =>{\r\n                console.log(err);\r\n\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <h3>Details about {this.state.pet.name}</h3>\r\n                <h3>Pet Type: {this.state.pet.type}</h3>\r\n                <h3>Description: {this.state.pet.description}</h3>\r\n                <fieldset>\r\n                <legend>Skills:</legend>\r\n                    <h2>Skill 1:  {this.state.pet.skill_one}</h2>\r\n                    <h2>Skill 2:  {this.state.pet.skill_two}</h2>\r\n                    <h2>Skill 3:  {this.state.pet.skill_three}</h2>\r\n                </fieldset>\r\n                <h3>Likes: {this.state.pet.like} </h3>\r\n                <button disabled={this.state.liked} onClick={this.addLike}>Like this pet</button>\r\n                <button onClick={this.delete}>Adopt this pet</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Detail;","import React, { Component } from 'react';\r\nimport { Link }  from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Edit extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pet: {\r\n                name: \"\",\r\n                type: \"\",\r\n                description: \"\",\r\n                skill_one: \"\",\r\n                skill_two: \"\",\r\n                skill_three: \"\",\r\n                like: 0,\r\n                liked: false\r\n            },\r\n        errors: {}\r\n        }\r\n    }\r\n    componentDidMount =() => {\r\n        console.log(this.props.match.params._id);\r\n        axios.get(`/api/pets/${this.props.match.params._id}`)\r\n        .then( res => {\r\n            this.setState({pet: res.data.pet});\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    change = (key, e) => {\r\n        let p = {...this.state.pet};\r\n        p[key] = e.target.value;\r\n        this.setState({pet: p});\r\n    }\r\n    updatePet = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        axios.put(`/api/pets/${this.props.match.params._id}`, this.state.pet)\r\n            .then( res => {\r\n                if(res.data.errors){\r\n                this.setState({errors: res.data.errors.errors})\r\n                } else {\r\n                    this.props.history.push(`/pets/${this.props.match.params._id}/detail`);\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <h2>Edit this pet</h2>\r\n                <form onSubmit={this.updatePet}>\r\n                    <div className=\"form-group\">\r\n                        <label>Pet Name:  </label>\r\n                        <input type=\"text\" onChange={this.change.bind(this, \"name\")} value={this.state.pet.name}  />\r\n                        {\r\n                            (this.state.errors.name) ?\r\n                            <span className=\"error\">{this.state.errors.name.message}</span> :\r\n                            <span></span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Pet Type:  </label>\r\n                        <input type=\"text\" onChange={this.change.bind(this, \"type\")} value={this.state.pet.type} />\r\n                    {\r\n                        (this.state.errors.type) ?\r\n                        <span className=\"error\">{this.state.errors.type.message}</span> :\r\n                        <span></span>\r\n                    }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description:  </label>\r\n                        <textarea className=\"form-control\" rows=\"2\" id=\"comment\" onChange={this.change.bind(this, \"description\")} value={this.state.pet.description}  />\r\n                    {\r\n                        (this.state.errors.description) ?\r\n                        <span className=\"error\">{this.state.errors.description.message}</span> :\r\n                        <span></span>\r\n                    }\r\n                        <fieldset>\r\n                            <legend>Skills:</legend>\r\n                            <div className=\"form-group\">\r\n                                <label>Skill 1:  </label>\r\n                                <input type=\"text\" onChange={this.change.bind(this, \"skill_one\")} value={this.state.pet.skill_one} />\r\n                                <label>Skill 2:  </label>\r\n                                <input type=\"text\" onChange={this.change.bind(this, \"skill_two\")} value={this.state.pet.skill_two} />\r\n                                <label>Skill 3:  </label>\r\n                                <input type=\"text\" onChange={this.change.bind(this, \"skill_three\")} value={this.state.pet.skill_three} />\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                    <br></br>\r\n                    <input type=\"submit\" value=\"Update Pet\" />\r\n                    <Link to={`/pets/${this.props.match.params._id}/detail`}>Cancel</Link>\r\n        \r\n                \r\n                </form>  \r\n            </> \r\n        )\r\n    }\r\n}\r\nexport default Edit;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport List from './components/List';\nimport New from './components/New';\nimport Detail from './components/Detail';\nimport Edit from './components/Edit';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <h1>Pet Shelter</h1>\n        <ul className=\"nav\">\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n        </ul>\n        <Route exact path=\"/\" component={List} />\n        <Route path=\"/new\" component={New} />\n        <Route path=\"/pets/:_id\" component={Detail} /> \n        <Route path=\"/edit/:_id\" component={Edit} />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}